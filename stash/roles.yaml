apiVersion: v1
kind: ServiceAccount
metadata:
  name: stash
  namespace: stash
  labels:
    app: "stash"

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: stash
  labels:
    app: "stash"
rules:
- apiGroups: ["apiextensions.k8s.io"]
  resources: ["customresourcedefinitions"]
  verbs: ["*"]
- apiGroups: ["apiregistration.k8s.io"]
  resources: ["apiservices"]
  verbs: ["get", "patch"]
- apiGroups: ["admissionregistration.k8s.io"]
  resources: ["mutatingwebhookconfigurations", "validatingwebhookconfigurations"]
  verbs: ["delete", "get", "list", "watch", "patch"]
- apiGroups:
  - stash.appscode.com
  resources:
  - "*"
  verbs: ["*"]
- apiGroups:
  - appcatalog.appscode.com
  resources:
  - "*"
  verbs: ["*"]
- apiGroups:
  - apps
  resources:
  - daemonsets
  - deployments
  - replicasets
  - statefulsets
  verbs: ["get", "list", "watch", "patch"]
- apiGroups:
  - batch
  resources:
  - jobs
  - cronjobs
  verbs: ["get", "list", "watch", "create", "delete", "patch"]
- apiGroups:
  - ""
  resources:
  - namespaces
  - replicationcontrollers
  verbs: ["get", "list", "watch", "patch"]
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs: ["create", "update", "get", "delete"]
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs: ["get","list","watch"]
- apiGroups:
  - ""
  resources:
  - secrets
  - services
  verbs: ["get"]
- apiGroups:
  - ""
  resources:
  - events
  verbs: ["create"]
- apiGroups:
  - ""
  resources:
  - nodes
  verbs: ["list"]
- apiGroups:
  - ""
  resources:
  - pods
  - pods/exec
  verbs: ["get", "create", "list", "delete", "deletecollection"]
- apiGroups:
  - ""
  resources:
  - serviceaccounts
  verbs: ["get", "create", "patch", "delete"]
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterroles
  - roles
  - rolebindings
  verbs: ["get", "create", "delete", "patch"]
- apiGroups:
  - apps.openshift.io
  resources:
  - deploymentconfigs
  verbs: ["get", "list", "watch", "patch"]
- apiGroups:
  - policy
  resources:
  - podsecuritypolicies
  verbs: ["use"]
  resourceNames:
  - stash
  - stash-backupsession-cron
  - stash-backup-job
  - stash-restore-job
- apiGroups:
  - snapshot.storage.k8s.io
  resources:
  - volumesnapshots
  - volumesnapshotcontents
  - volumesnapshotclasses
  verbs: ["create", "get", "list", "watch", "patch"]

---
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: stash
  labels:
    app: "stash"
spec:
  privileged: false
  allowPrivilegeEscalation: false
  volumes:
  - "*" # operator need to access all types of volume
  hostNetwork: false
  hostIPC: false
  hostPID: false
  runAsUser:
    rule: RunAsAny
  seLinux:
    rule: RunAsAny
  supplementalGroups:
    rule: RunAsAny
  fsGroup:
    rule: RunAsAny

---
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: stash-backupsession-cron
  labels:
    app: "stash"
spec:
  privileged: false
  allowPrivilegeEscalation: false
  hostNetwork: false
  hostIPC: false
  hostPID: false
  volumes:
  - secret # kubernetes mount service account token secret into the pod. so we need to give permission to mount secret volume
  runAsUser:
    rule: RunAsAny
  seLinux:
    rule: RunAsAny
  supplementalGroups:
    rule: RunAsAny
  fsGroup:
    rule: RunAsAny

---
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: stash-backup-job
  labels:
    app: "stash"
spec:
  privileged: false
  allowPrivilegeEscalation: false
  volumes:
  - "*" # backup job need to access all types of volume as user may backup any types of volume
  hostNetwork: false
  hostIPC: false
  hostPID: false
  runAsUser:
    rule: RunAsAny
  seLinux:
    rule: RunAsAny
  supplementalGroups:
    rule: RunAsAny
  fsGroup:
    rule: RunAsAny

---
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: stash-restore-job
  labels:
    app: "stash"
spec:
  allowPrivilegeEscalation: false
  volumes:
  - "*" # restore job need to access all types of volume as user may restore to any types of volume
  hostNetwork: false
  hostIPC: false
  hostPID: false
  runAsUser:
    rule: RunAsAny
  seLinux:
    rule: RunAsAny
  supplementalGroups:
    rule: RunAsAny
  fsGroup:
    rule: RunAsAny

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: stash
  labels:
    app: "stash"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: stash
subjects:
- kind: ServiceAccount
  name: stash
  namespace: stash

---
# to read the config for terminating authentication
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: stash-apiserver-extension-server-authentication-reader
  namespace: kube-system
  labels:
    app: "stash"
roleRef:
  kind: Role
  apiGroup: rbac.authorization.k8s.io
  name: extension-apiserver-authentication-reader
subjects:
- kind: ServiceAccount
  name: stash
  namespace: stash

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: stash-apiserver-auth-delegator
  labels:
    app: "stash"
roleRef:
  kind: ClusterRole
  apiGroup: rbac.authorization.k8s.io
  name: system:auth-delegator
subjects:
- kind: ServiceAccount
  name: stash
  namespace: stash

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: appscode:stash:edit
  labels:
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
- apiGroups:
  - stash.appscode.com
  resources:
  - restics
  - recoveries
  - repositories
  verbs: ["*"]
- apiGroups:
  - repositories.stash.appscode.com
  resources:
  - snapshots
  verbs: ["delete", "deletecollection", "get", "list"]

---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: appscode:stash:view
  labels:
    rbac.authorization.k8s.io/aggregate-to-view: "true"
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
rules:
- apiGroups:
  - stash.appscode.com
  resources:
  - restics
  - recoveries
  - repositories
  verbs: ["get", "list", "watch"]
- apiGroups:
  - repositories.stash.appscode.com
  resources:
  - snapshots
  verbs: ["get", "list"]
